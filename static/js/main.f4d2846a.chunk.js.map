{"version":3,"sources":["components/SearchBar.js","api/youtube.js","components/VideoItem.js","components/VideoList.js","components/VideoDetail.js","components/App.js","index.js"],"names":["SearchBar","state","term","onFormSubmit","event","preventDefault","props","passingFromChildToParent","onInputChange","setState","target","value","className","onSubmit","this","type","onChange","React","Component","axios","create","baseURL","params","part","maxResults","key","VideoItem","video","onVideoSelect","onClick","alt","snippet","title","src","thumbnails","medium","url","VideoList","videos","passingFromListToApp","renderedList","map","id","videoId","VideoDetail","oneVideo","videoSrc","description","App","selectedVideo","onSearchSubmit","a","youtube","get","q","response","data","items","style","marginTop","ReactDOM","render","document","querySelector"],"mappings":"qQAqDeA,E,2MAjDXC,MAAQ,CAAEC,KAAM,I,EAEhBC,aAAe,SAACC,GAGZA,EAAMC,iBAEN,EAAKC,MAAMC,yBAAyB,EAAKN,MAAMC,O,EAInDM,cAAgB,SAACJ,GACb,EAAKK,SAAS,CAAEP,KAAME,EAAMM,OAAOC,S,mKAanC,OACI,yBAAKC,UAAU,yBACX,0BAAMC,SAAUC,KAAKX,aAAcS,UAAU,WACzC,yBAAKA,UAAU,SACX,iDAQA,2BACIG,KAAK,OACLJ,MAAOG,KAAKb,MAAMC,KAClBc,SAAaF,KAAKN,uB,GA1CtBS,IAAMC,W,QCEfC,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,wCACTC,OAAQ,CACNC,KAAM,UACNC,WAAY,EACZC,IAPQ,6CC2BGC,G,MAvBG,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,cAIxB,OACI,yBAAKC,QAAU,kBAAMD,EAAcD,IAASf,UAAU,mBAClD,yBACIA,UAAU,WACVkB,IAAKH,EAAMI,QAAQC,MACnBC,IAAKN,EAAMI,QAAQG,WAAWC,OAAOC,MAEzC,yBAAKxB,UAAU,WACX,yBAAKA,UAAU,UAAf,IAA0Be,EAAMI,QAAQC,MAAxC,SCODK,EAtBG,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,OAAQC,EAA2B,EAA3BA,qBAOnBC,EAAeF,EAAOG,IAAI,SAACd,GAC7B,OACI,kBAAC,EAAD,CACIC,cAAeW,EACfd,IAAKE,EAAMe,GAAGC,QACdhB,MAAOA,MAOnB,OAAO,yBAAKf,UAAU,2BAAf,IAA2C4B,EAA3C,MCEKI,EArBI,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAClB,IAAKA,EACD,OAAO,6CAEX,IAAMC,EAAQ,wCAAoCD,EAASH,GAAGC,SAE9D,OACI,6BACI,yBAAK/B,UAAU,YACX,4BAAQqB,IAAKa,EAAUd,MAAOa,EAASd,QAAQC,SAEnD,yBAAKpB,UAAU,cACX,wBAAIA,UAAU,aACTiC,EAASd,QAAQC,OAEtB,2BAAIa,EAASd,QAAQgB,gBCmDtBC,E,2MA7DX/C,MAAQ,CAAEqC,OAAQ,GAAIW,cAAe,M,EAErCrB,cAAgB,SAACD,GAEb,EAAKlB,SAAS,CAAEwC,cAAetB,K,EAenCuB,e,sCAAiB,WAAOhD,GAAP,eAAAiD,EAAA,qEAEUC,EAAQC,IAAI,UAAW,CAC1C/B,OAAQ,CACJgC,EAAGpD,KAJE,OAEPqD,EAFO,OAOb,EAAK9C,SAAS,CACV6B,OAAQiB,EAASC,KAAKC,MACtBR,cAAeM,EAASC,KAAKC,MAAM,KAT1B,yC,yIAXb3C,KAAKoC,eAAe,gC,2CAIhBpC,KAAKb,MAAMgD,gB,+BAuBf,OACI,yBAAKrC,UAAU,eAAe8C,MAAO,CAAEC,UAAW,SAC9C,kBAAC,EAAD,CAAWpD,yBAA0BO,KAAKoC,iBAC1C,yBAAKtC,UAAU,WACX,yBAAKA,UAAU,UAEX,yBAAKA,UAAU,sBACX,kBAAC,EAAD,CAAaiC,SAAU/B,KAAKb,MAAMgD,iBAEtC,yBAAKrC,UAAU,oBAKX,kBAAC,EAAD,CACI2B,qBAAsBzB,KAAKc,cAC3BU,OAAQxB,KAAKb,MAAMqC,iB,GArDjCrB,IAAMC,WCFxB0C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.f4d2846a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass SearchBar extends React.Component {\r\n    \r\n    state = { term: \"\" };\r\n    \r\n    onFormSubmit = (event) => {\r\n\r\n        // this prevents refreshing of webpage after submitting user's input.\r\n        event.preventDefault();\r\n\r\n        this.props.passingFromChildToParent(this.state.term);\r\n        //this.props.onSubmit(this.state.term);\r\n    };\r\n\r\n    onInputChange = (event) => {\r\n        this.setState({ term: event.target.value });\r\n        //console.log(this.state.term);\r\n    };\r\n\r\n    componentDidMount() {\r\n        //console.log(this.state.term);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        //console.log(this.state.term);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"search-bar ui segment\">\r\n                <form onSubmit={this.onFormSubmit} className=\"ui form\">\r\n                    <div className=\"field\">\r\n                        <label>Video Search: </label>\r\n                        {/* By the props, value, input is locked, which is initialized \r\n                            by 'state' and cannot be changed by user's input.\r\n                            This can be unlocked by the props, 'onChange' handler. \r\n                            The name of onChange() cannot be changed, since it is special\r\n                            handler name. \r\n                            Whenever input is changed, onInputChange() will be called\r\n                            thru event handler, 'onChange' */}\r\n                        <input \r\n                            type=\"text\" \r\n                            value={this.state.term} \r\n                            onChange = { this.onInputChange }\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar;\r\n","import axios from \"axios\";\r\n\r\nconst KEY = \"AIzaSyB2-mJglJQXxLkEoasAi0YlwhV8khPQVlc\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://www.googleapis.com/youtube/v3\",\r\n  params: {\r\n    part: 'snippet',\r\n    maxResults: 5,\r\n    key: KEY\r\n  }\r\n});\r\n","import './VideoItem.css';\r\nimport React from 'react';\r\n\r\n/* de-structuring props, video and onVideoSelect.\r\n   The props, onVideoSelect will pass user-clicked video to VideoList.js component.\r\n   And finally will be passed to App.js component */\r\nconst VideoItem = ( {video, onVideoSelect} ) => {\r\n\r\n    /* There are three main event handler:\r\n      1) onChange, 2) onClick 3) onSubmit */\r\n    return (\r\n        <div onClick={ () => onVideoSelect(video) } className=\"video-item item\">\r\n            <img \r\n                className=\"ui image\"\r\n                alt={video.snippet.title} \r\n                src={video.snippet.thumbnails.medium.url} \r\n            />\r\n            <div className=\"content\"> \r\n                <div className=\"header\"> {video.snippet.title} </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n/*\r\nconst VideoItem = (props) => {\r\n    return <div><img alt={props.video.snippet.title} src={props.video.snippet.thumbnails.default.url} /></div>;\r\n};\r\n*/\r\nexport default VideoItem;","import React from 'react';\r\nimport VideoItem from './VideoItem';\r\n\r\nconst VideoList = ({ videos, passingFromListToApp }) => {\r\n    /*\r\n    const videos = props.videos;\r\n    const passingFromListToApp = props.passingFromListToApp;\r\n    */\r\n    /* The props, passingFromLIstToApp will be used to pass\r\n       user-selected video to App component. */\r\n    const renderedList = videos.map((video) => {\r\n        return (\r\n            <VideoItem \r\n                onVideoSelect={passingFromListToApp} \r\n                key={video.id.videoId} \r\n                video={video} \r\n            />\r\n        );\r\n    });\r\n\r\n    //console.log(videos);\r\n\r\n    return <div className=\"ui relaxed divided list\"> {renderedList} </div>;\r\n}\r\n\r\nexport default VideoList;","import React from 'react';\r\n\r\n/* de-structuring props, onVideoSelect. */\r\nconst VideoDetail = ({oneVideo}) => {\r\n    if (!oneVideo)\r\n        return <div>Loading ... </div>;\r\n\r\n    const videoSrc = `https://www.youtube.com/embed/${oneVideo.id.videoId}`;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"ui embed\">\r\n                <iframe src={videoSrc} title={oneVideo.snippet.title} />\r\n            </div>\r\n            <div className=\"ui segment\">\r\n                <h4 className=\"hi header\">\r\n                    {oneVideo.snippet.title}\r\n                </h4>    \r\n                <p>{oneVideo.snippet.description}</p>\r\n            </div>    \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default  VideoDetail;","import React from 'react';\r\nimport SearchBar from './SearchBar';\r\nimport youtube from '../api/youtube';\r\nimport VideoList from './VideoList';\r\nimport VideoDetail from './VideoDetail';\r\n\r\nclass App extends React.Component {\r\n\r\n    state = { videos: [], selectedVideo: null };\r\n\r\n    onVideoSelect = (video) => {\r\n        //console.log('From the App component: ', video);\r\n        this.setState({ selectedVideo: video });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onSearchSubmit('worldwide best tour places');\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.selectedVideo !== null) {\r\n            //console.log(this.state.selectedVideo.snippet.title);\r\n            //console.log(this.state.selectedVideo);\r\n        }\r\n            \r\n    }\r\n\r\n    onSearchSubmit = async (term) => {\r\n\r\n        const response = await youtube.get('/search', {\r\n            params: {\r\n                q: term\r\n            }\r\n        });\r\n        this.setState({ \r\n            videos: response.data.items,\r\n            selectedVideo: response.data.items[0] \r\n        });\r\n        //console.log('API response: ', response.data.items);\r\n        //console.log(term);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ui container\" style={{ marginTop: \"20px\" }}>\r\n                <SearchBar passingFromChildToParent={this.onSearchSubmit} />\r\n                <div className=\"ui grid\">\r\n                    <div className=\"ui row\">\r\n                        {/* total span is 16: each has 11(left column) and 5(right column) */}\r\n                        <div className=\"eleven wide column\">\r\n                            <VideoDetail oneVideo={this.state.selectedVideo} />\r\n                        </div>    \r\n                        <div className=\"five wide column\">\r\n                            {/*\r\n                            <h3>Search Result has {this.state.videos.length} videos.</h3> */}\r\n                            {/* The props, passingFromListToApp will be used to pass \r\n                                the user-selected video to the parent component, App */}\r\n                            <VideoList \r\n                                passingFromListToApp={this.onVideoSelect} \r\n                                videos={this.state.videos} \r\n                            />\r\n                        </div>    \r\n                    </div>\r\n                </div>        \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}